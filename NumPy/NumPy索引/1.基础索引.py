# 在 NumPy 中，数组的基础索引是非常重要的概念，它允许我们访问和操作数组中的元素。

# TODO 1.对于一维数组，可以使用"整数索引"来访问特定的元素。
import numpy as np

# 创建一维数组
array_1d = np.array([10, 20, 30, 40, 50])

# 访问特定元素
print("第一个元素:", array_1d[0])  # 索引从 0 开始
print("第三个元素:", array_1d[2])  # 输出 30

# 负索引访问
print("最后一个元素:", array_1d[-1])  # 输出 50
print("倒数第二个元素:", array_1d[-2])  # 输出 40

# TODO 2.对于二维数组，可以使用"元组形式"的索引来访问特定的元素。
# 创建二维数组
array_2d = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])

# 访问特定元素
print("第一行第一列的元素:", array_2d[0, 0])  # 输出 1
print("第二行第三列的元素:", array_2d[1, 2])  # 输出 6

# 负索引访问
print("最后一行最后一列的元素:", array_2d[-1, -1])  # 输出 9
print("倒数第二行第一列的元素:", array_2d[-2, 0])  # 输出 4

# 如果对索引数少于维度的多维数组进行索引，则会得到一个子维度数组。
# 必须注意，返回的数组是一个视图（view），即它不是原始数组的副本，而是指向内存中与原始数组相同的值。
print("第一行的元素:", array_2d[0])  # 输出 [1 2 3]
print("第二行第三列的元素:", array_2d[1, 2])  # 输出 6
print("第二行第三列的元素:", array_2d[1][2])  # 输出 6

# TODO 3.切片（Slicing）  切片的语法为 start:stop:step。
# 一维数组切片
print("从第二个到第四个元素:", array_1d[1:4])  # 输出 [20 30 40]
print("每隔一个元素:", array_1d[::2])  # 输出 [10 30 50]

# 二维数组切片
print("获取前两行:", array_2d[:2])  # 输出 [[1 2 3]
                                        #        [4 5 6]]
print("获取第二列:", array_2d[:, 1])  # 输出 [2 5 8]
print("获取第一行的前两个元素:", array_2d[0, :2])  # 输出 [1 2]

# TODO 4.布尔索引
# 创建一个包含随机数的数组
array_random = np.array([10, 20, 30, 40, 50])

# 布尔索引
bool_index = array_random > 25  # 创建布尔数组
print("大于 25 的元素:", array_random[bool_index])  # 输出 [30 40 50]

# 直接使用条件
print("大于 25 的元素:", array_random[array_random > 25])  # 输出 [30 40 50]

# TODO 5.使用花式索引
# 创建一个数组
array_fancy = np.array([10, 20, 30, 40, 50])

# 使用花式索引
indices = [0, 2, 4]
print("使用花式索引获得的元素:", array_fancy[indices])  # 输出 [10 30 50]
